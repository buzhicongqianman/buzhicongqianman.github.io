{"version":3,"sources":["webpack:///./src/pages/posts.js","webpack:///./.cache/gatsby-browser-entry.js","webpack:///./.cache/public-page-renderer.js","webpack:///./.cache/public-page-renderer-prod.js","webpack:///./src/images/large-logo.png","webpack:///./src/components/Navbar/Logo/index.js","webpack:///./src/components/Navbar/NavBtn/index.js","webpack:///./src/utils/MyLink.js","webpack:///./src/components/UI/Modal.js","webpack:///./src/components/Navbar/NavMenu/index.js","webpack:///./src/components/Navbar/index.js","webpack:///./src/components/Layout/index.js"],"names":["linkStyle","Object","react_emotion__WEBPACK_IMPORTED_MODULE_3__","a","textDecoration","color",":hover","titleStyle","dateStyle","t","default","_ref","postList","data","allMarkdownRemark","edges","map","_ref2","node","react__WEBPACK_IMPORTED_MODULE_1___default","createElement","key","id","gatsby__WEBPACK_IMPORTED_MODULE_2__","Link","to","fields","slug","className","frontmatter","title","Date","date","toLocaleDateString","_components_Layout__WEBPACK_IMPORTED_MODULE_4__","query","StaticQueryContext","react__WEBPACK_IMPORTED_MODULE_0___default","createContext","StaticQuery","props","Consumer","staticQueryData","render","children","graphql","Error","propTypes","prop_types__WEBPACK_IMPORTED_MODULE_1___default","object","string","isRequired","func","m","module","exports","__webpack_require__","ProdPageRenderer","location","pageResources","_loader__WEBPACK_IMPORTED_MODULE_3__","getResourcesForPathname","pathname","_page_renderer__WEBPACK_IMPORTED_MODULE_2__","shape","__webpack_exports__","s","260","e","site","siteMetadata","261","p","262","n","r","i","c","l","o","u","d","f","g","LogoBox","index_es","b","target","imgStyle","Navbar_Logo","logoSrc","react_default","gatsby_browser_entry","src","large_logo_default","alt","Line","btnBaseStyle","btnOpenStyle","btnCloseStyle","Navbar_NavBtn","isActive","clicked","openBtn","onClick","closeBtn","utils_MyLink","other","objectWithoutProperties_default","test","assign","href","UI_Modal","box","ContactBox","NavigationBox","Items","Item","NavLinkStyle","ContactLinkStyle","activeLinkStyle","Navbar_NavMenu","navMenu","activeClassName","navbarStyle","components_Navbar","state","showNavMenu","onNavBtnClicked","_this","setState","prevState","Fragment","this","react","Component","mainStyle","Layout_Layout","Helmet_default","meta","name","content","_755544856","prop_types_default","B"],"mappings":"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","file":"component---src-pages-posts-js-d91c562c1e926cda1a55.js","sourcesContent":["import React from \"react\"\r\nimport { Link, graphql } from \"gatsby\"\r\nimport { css } from \"react-emotion\"\r\nimport Layout from \"../components/Layout\"\r\n\r\nconst linkStyle = css({\r\n  textDecoration: 'none',\r\n  color: '#454545',\r\n  ':hover': {\r\n    textDecoration: 'underline'\r\n  }\r\n})\r\n\r\nconst titleStyle = css`\r\n  font-size: calc(.7rem + 1vw);\r\n  @media (min-width: 1000px) {\r\n    font-size: 1.32rem;\r\n  }\r\n`\r\n\r\nconst dateStyle = css`\r\n  display: none;\r\n  font-weight: normal;\r\n  @media(min-width: 500px) {\r\n    display: inline;\r\n    float: right;\r\n    color: #ddd;\r\n  }\r\n`\r\n\r\nexport default ({ data }) => {\r\n  \r\n  const postList = data.allMarkdownRemark.edges.map(({ node }) => (\r\n    <div key={node.id}>\r\n      <Link to={node.fields.slug} className={linkStyle}>\r\n      <h3 className={titleStyle}>\r\n        {node.frontmatter.title}\r\n        <span className={dateStyle}>\r\n          {new Date(node.frontmatter.date).toLocaleDateString()}\r\n        </span>\r\n      </h3>\r\n      </Link>\r\n    </div>\r\n  ))\r\n  return (\r\n    <Layout>\r\n      {postList}\r\n    </Layout>\r\n  )\r\n}\r\n\r\nexport const query = graphql`\r\n  query {\r\n    allMarkdownRemark(sort: { fields: [frontmatter___date], order: DESC }) {\r\n      totalCount\r\n      edges {\r\n        node {\r\n          id\r\n          frontmatter {\r\n            title\r\n            date(formatString: \"DD MMMM, YYYY\")\r\n            tags\r\n          }\r\n          fields {\r\n            slug\r\n          }\r\n          excerpt\r\n        }\r\n      }\r\n    }\r\n  }\r\n`","import React from \"react\"\nimport PropTypes from \"prop-types\"\nimport Link, {\n  withPrefix,\n  navigate,\n  push,\n  replace,\n  navigateTo,\n} from \"gatsby-link\"\nimport PageRenderer from \"./public-page-renderer\"\nimport parsePath from \"./parse-path\"\n\nconst StaticQueryContext = React.createContext({})\n\nconst StaticQuery = props => (\n  <StaticQueryContext.Consumer>\n    {staticQueryData => {\n      if (\n        props.data ||\n        (staticQueryData[props.query] && staticQueryData[props.query].data)\n      ) {\n        return (props.render || props.children)(\n          props.data ? props.data.data : staticQueryData[props.query].data\n        )\n      } else {\n        return <div>Loading (StaticQuery)</div>\n      }\n    }}\n  </StaticQueryContext.Consumer>\n)\n\nStaticQuery.propTypes = {\n  data: PropTypes.object,\n  query: PropTypes.string.isRequired,\n  render: PropTypes.func,\n  children: PropTypes.func,\n}\n\nfunction graphql() {\n  throw new Error(\n    `It appears like Gatsby is misconfigured. Gatsby related \\`graphql\\` calls ` +\n      `are supposed to only be evaluated at compile time, and then compiled away,. ` +\n      `Unfortunately, something went wrong and the query was left in the compiled code.\\n\\n.` +\n      `Unless your site has a complex or custom babel/Gatsby configuration this is likely a bug in Gatsby.`\n  )\n}\n\nexport {\n  Link,\n  withPrefix,\n  graphql,\n  parsePath,\n  navigate,\n  push, // TODO replace for v3\n  replace, // TODO remove replace for v3\n  navigateTo, // TODO: remove navigateTo for v3\n  StaticQueryContext,\n  StaticQuery,\n  PageRenderer,\n}\n","const preferDefault = m => (m && m.default) || m\n\nif (process.env.NODE_ENV !== `production`) {\n  module.exports = preferDefault(require(`./public-page-renderer-dev`))\n} else if (process.env.BUILD_STAGE === `build-javascript`) {\n  module.exports = preferDefault(require(`./public-page-renderer-prod`))\n} else {\n  module.exports = () => null\n}\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\n\nimport InternalPageRenderer from \"./page-renderer\"\nimport loader from \"./loader\"\n\nconst ProdPageRenderer = ({ location }) => {\n  const pageResources = loader.getResourcesForPathname(location.pathname)\n  return React.createElement(InternalPageRenderer, {\n    location,\n    pageResources,\n  })\n}\n\nProdPageRenderer.propTypes = {\n  location: PropTypes.shape({\n    pathname: PropTypes.string.isRequired,\n  }).isRequired,\n}\n\nexport default ProdPageRenderer\n","module.exports = __webpack_public_path__ + \"static/large-logo-a5720b4bfd8cc1ff50565ee296ea7d98.png\";","import React from 'react'\r\nimport { Link } from 'gatsby'\r\nimport styled, { css } from 'react-emotion'\r\nimport largeLogoSrc from '../../../images/large-logo.png'\r\n\r\nconst LogoBox = styled('div')`\r\n  max-width: 150px;\r\n`\r\n\r\nconst imgStyle = css`\r\n  display: inline-block;\r\n  width: 100%;\r\n  margin: 0;\r\n  padding: 0;\r\n`\r\n\r\nconst Logo = ({logoSrc}) => {\r\n  return (\r\n    <LogoBox>\r\n      <Link to='/'>\r\n        <img className={imgStyle} src={largeLogoSrc} alt=\"不知从前慢\" />\r\n      </Link>\r\n    </LogoBox>\r\n  )\r\n}\r\n\r\n\r\n\r\nexport default Logo","import React from 'react'\r\nimport styled, { css } from 'react-emotion'\r\n// import style from './NavBtn.scss'\r\n\r\nconst Line = styled('div')`\r\n  width: 1em;\r\n  height: 2px;\r\n  background: #fff;\r\n  z-index: 201;\r\n`\r\n\r\nconst btnBaseStyle = css`\r\n  position: relative;\r\n  width: 46px;\r\n  height: 46px;\r\n  box-shadow: 2px 2px 5px rgba(0,0,0,.2);\r\n  border-radius: 50%;\r\n  cursor: pointer;\r\n  background: #f16161;\r\n  z-index: 200;\r\n`\r\n\r\nconst btnOpenStyle = css`\r\n  ${btnBaseStyle};\r\n  display: flex;\r\n  flex-direction: column;\r\n  justify-content: center;\r\n  align-items: center;\r\n\r\n  & div:not(:first-child) {\r\n    margin-top: 3px;\r\n  }\r\n`\r\n\r\nconst btnCloseStyle = css`\r\n  ${btnBaseStyle};\r\n  & div:first-child {\r\n    position: absolute;\r\n    top: 22px;\r\n    left: 15px;\r\n    transform: rotate(45deg);\r\n  }\r\n  & div:last-child {\r\n    position: absolute;\r\n    top: 22px;\r\n    left: 15px;\r\n    transform: rotate(135deg);\r\n  }\r\n`\r\n\r\nconst NavBtn = ({isActive, clicked}) => {\r\n  const openBtn = (\r\n    <div className={btnOpenStyle} onClick={clicked}>\r\n      <Line />\r\n      <Line />\r\n      <Line />\r\n    </div>\r\n  )\r\n  const closeBtn = (\r\n    <div className={btnCloseStyle} onClick={clicked}>\r\n      <Line />\r\n      <Line />\r\n    </div>\r\n  )\r\n  return isActive ? closeBtn : openBtn\r\n}\r\n\r\nexport default NavBtn","import React from 'react'\r\nimport { Link } from \"gatsby\";\r\n\r\nconst MyLink = ({ children, to, ...other }) => {\r\n  // Tailor the following test to your environment.\r\n  // This example assumes that any internal link (intended for Gatsby)\r\n  // will start with exactly one slash, and that anything else is external.\r\n  const internal = /^\\/(?!\\/)/.test(to);\r\n\r\n  // Use gatsby-link for internal links, and <a> for others\r\n  if (internal) {\r\n    return (\r\n      <Link to={to} {...other}>\r\n        {children}\r\n      </Link>\r\n    );\r\n  }\r\n  return (\r\n    <a href={to} {...other}>\r\n      {children}\r\n    </a>\r\n  );\r\n};\r\n\r\nexport default MyLink;","import styled from 'react-emotion'\r\n\r\nconst Modal = styled('div')`\r\n  display: flex;\r\n  flex-direction: column;\r\n  position: fixed;\r\n  top: 0;\r\n  left: 0;\r\n  height: 100vh;\r\n  width: 100%;\r\n  background: #555;\r\n  z-index: 100;\r\n\r\n  @media(min-width: 1200px) {\r\n    flex-direction: row;\r\n  }\r\n`\r\n\r\nexport default Modal","import React from 'react'\r\nimport styled, { css } from 'react-emotion'\r\nimport Link from '../../../utils/MyLink'\r\nimport Modal from '../../UI/Modal'\r\n\r\nconst box = css`\r\n  flex: 1 1 50%;\r\n  display: flex;\r\n  flex-direction: column;\r\n  justify-content: center;\r\n  align-items: center;\r\n  & h3 {\r\n    color: #909090;\r\n  }\r\n`\r\n\r\nconst ContactBox = styled('section')`\r\n  ${box};\r\n  background: #eddcdc;\r\n`\r\n\r\nconst NavigationBox = styled('section')`\r\n  ${box};\r\n  background: #dbe7da;\r\n`\r\n\r\nconst Items = styled('ul')`\r\n  margin: 0;\r\n  padding: 0;\r\n  width: 100%;\r\n  list-style: none;\r\n`\r\n\r\nconst Item = styled('li')`\r\n  text-align: center;\r\n  margin: .7em 0;\r\n`\r\n\r\nconst linkStyle = css`\r\n  font-size: 1.1em;\r\n  font-weight: bold;\r\n  text-decoration: none;\r\n`\r\n\r\nconst NavLinkStyle = css`\r\n  ${linkStyle};\r\n\r\n  color: #fff;\r\n`\r\n\r\nconst ContactLinkStyle = css`\r\n  ${linkStyle};\r\n  \r\n  color: #fff;\r\n`\r\n\r\nconst activeLinkStyle = css`\r\n  &::before {\r\n    display: inline-block;\r\n    content: \"\";\r\n    padding: .25em;\r\n    margin-right: -0.5em;\r\n    border-radius: 50%;\r\n    background: #f3ad38;\r\n    position: relative;\r\n    right: 1.2em;\r\n  }\r\n` \r\n\r\nconst NavMenu = ({isActive}) => {\r\n  const navMenu = (\r\n    <Modal>\r\n      <NavigationBox>\r\n        <h3>浏览</h3>\r\n        <Items>\r\n          <Item><Link className={NavLinkStyle} activeClassName={activeLinkStyle} to=\"/\">首页</Link></Item>\r\n          <Item><Link className={NavLinkStyle} activeClassName={activeLinkStyle} to=\"/posts\">归档</Link></Item>\r\n          <Item><Link className={NavLinkStyle} activeClassName={activeLinkStyle} to=\"/categories\">分类</Link></Item>\r\n        </Items>\r\n      </NavigationBox>\r\n      <ContactBox>\r\n        <h3>联系</h3>\r\n        <Items>\r\n          <Item><Link className={ContactLinkStyle} to=\"mailto:buzhicongqianman@gmail.com\">Email</Link></Item>\r\n          <Item><Link className={ContactLinkStyle} to=\"https://www.weibo.com/buzhicongqianman\">Weibo</Link></Item>\r\n          <Item><Link className={ContactLinkStyle} to=\"https://github.com/buzhicongqianman\">Github</Link></Item>\r\n        </Items>\r\n      </ContactBox>\r\n    </Modal>\r\n  )\r\n  return isActive ? navMenu : null\r\n}\r\n\r\nexport default NavMenu","import React, { Component } from 'react'\r\nimport { css } from 'react-emotion'\r\nimport Logo from './Logo'\r\nimport NavBtn from './NavBtn';\r\nimport NavMenu from './NavMenu';\r\n\r\nconst navbarStyle = css`\r\n  position: relative;\r\n  display: flex;\r\n  justify-content: space-between;\r\n  align-items: center;\r\n  margin: 0 auto;\r\n  margin-bottom: 2em;\r\n  padding: .7em;\r\n`\r\n\r\nclass Navbar extends Component {\r\n  state = {\r\n    showNavMenu: false\r\n  }\r\n\r\n  onNavBtnClicked = () => {\r\n    this.setState((prevState) => {\r\n      return {\r\n        showNavMenu: !prevState.showNavMenu\r\n      }\r\n    })\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <>\r\n        <NavMenu isActive={this.state.showNavMenu} />\r\n        <nav className={navbarStyle}>\r\n          <Logo />\r\n          <NavBtn isActive={this.state.showNavMenu} clicked={this.onNavBtnClicked} />\r\n        </nav>\r\n      </>\r\n    )\r\n  }\r\n}\r\n\r\nexport default Navbar","import React from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport Helmet from 'react-helmet'\r\nimport { StaticQuery, graphql } from 'gatsby'\r\nimport { css } from 'react-emotion'\r\n\r\nimport Navbar from '../Navbar'\r\n\r\nconst mainStyle = css`\r\n  margin: 0 auto;\r\n  max-width: 800px;\r\n  padding: 0 .7em;\r\n  text-align: justify;\r\n`\r\n\r\n// const footerStyle = css`\r\n//   background: #eee;\r\n//   text-align: center;\r\n//   padding: 2em;\r\n//   margin-top: 2em;\r\n// `\r\n\r\nconst Layout = ({ children }) => (\r\n  <StaticQuery\r\n    query={graphql`\r\n      query SiteTitleQuery {\r\n        site {\r\n          siteMetadata {\r\n            title\r\n          }\r\n        }\r\n      }\r\n    `}\r\n    render={data => (\r\n      <>\r\n        <Helmet\r\n          title={data.site.siteMetadata.title}\r\n          meta={[\r\n            { name: 'description', content: '不知从前慢' },\r\n            { name: 'keywords', content: '不知从前慢' },\r\n          ]}\r\n        >\r\n        </Helmet>\r\n        <header>\r\n          <Navbar />\r\n        </header>\r\n\r\n        <main className={mainStyle}>\r\n          {children}\r\n        </main>\r\n\r\n        {/* <footer className={footerStyle}>\r\n          <small>@不知从前慢</small>\r\n        </footer> */}\r\n      </>\r\n    )}\r\n  />\r\n)\r\n\r\nLayout.propTypes = {\r\n  children: PropTypes.node.isRequired,\r\n}\r\n\r\nexport default Layout\r\n"],"sourceRoot":""}